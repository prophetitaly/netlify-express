{"version":3,"sources":["components/MyFilterChoice.js","components/MyNavbar.js","components/MyTaskItem.js","components/MyTaskList.js","components/MyContainer.js","App.js","reportWebVitals.js","index.js"],"names":["MyFilterChoice","props","ListGroup","variant","id","Item","as","NavLink","to","className","activeClassName","action","MyNavbar","useState","sidebarShow","setSidebarShow","expand","bg","Row","Col","xs","Toggle","collapsed","aria-controls","aria-expanded","aria-label","onClick","Brand","exact","Form","FormControl","placeholder","type","style","display","justifyContent","color","size","Collapse","show","MyTaskItem","task","description","setDescription","date","setDate","important","setImportant","private","isPrivate","setIsPrivate","errorMessageDescription","setErrorMessageDescription","errorMessageDate","setErrorMessageDate","location","useLocation","history","useHistory","handleSubmit","event","preventDefault","valid","isBefore","dayjs","isValid","e","format","tasks","some","t","setTasks","oldTasks","map","ot","push","pathname","substr","lastIndexOf","path","substring","render","Group","sm","Control","required","isInvalid","value","onChange","ev","target","Feedback","Check","custom","label","defaultChecked","min","Button","background","padding","height","width","Link","isNaN","deleteTask","MyTaskList","tId","filter","indexOf","split","MyModalForm","resetForm","Modal","onHide","aria-labelledby","centered","Header","closeButton","Title","Body","Label","completed","user","fetch","method","headers","body","JSON","stringify","catch","error","console","log","Footer","MyContainer","modalShow","setModalShow","waiting","setWaiting","useEffect","a","response","json","fetchedTasks","forEach","fetchTasks","Container","fluid","isSame","isAfter","add","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.355a7784.chunk.js","sourcesContent":["import ListGroup from \"react-bootstrap/ListGroup\";\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nfunction MyFilterChoice(props) {\r\n\r\n  return (\r\n    <>\r\n      <ListGroup variant=\"flush\" id=\"sidebarMenu\">\r\n        <ListGroup.Item as={NavLink} to=\"/all\" className=\"list-group-item\" activeClassName=\"active\" action>\r\n          All\r\n        </ListGroup.Item>\r\n\r\n        <ListGroup.Item as={NavLink} to=\"/important\" className=\"list-group-item\" activeClassName=\"active\" action>\r\n          Important\r\n        </ListGroup.Item>\r\n\r\n        <ListGroup.Item as={NavLink} to=\"/today\" className=\"list-group-item\" activeClassName=\"active\" action>\r\n          Today\r\n        </ListGroup.Item>\r\n\r\n        <ListGroup.Item as={NavLink} to=\"/next7days\" className=\"list-group-item\" activeClassName=\"active\" action>\r\n          Next 7 Days\r\n        </ListGroup.Item>\r\n\r\n        <ListGroup.Item as={NavLink} to=\"/private\" className=\"list-group-item\" activeClassName=\"active\" action>\r\n          Private\r\n        </ListGroup.Item>\r\n      </ListGroup>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default MyFilterChoice;\r\n","import NavBar from \"react-bootstrap/Navbar\";\r\nimport { Check2All, PersonCircle } from \"react-bootstrap-icons\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport FormControl from \"react-bootstrap/FormControl\";\r\nimport { useState } from 'react';\r\nimport MyFilterChoice from \"./MyFilterChoice\";\r\nimport { Col, Row } from \"react-bootstrap\";\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nfunction MyNavbar(props) {\r\n\r\n  const [sidebarShow, setSidebarShow] = useState(true);\r\n\r\n  return (\r\n    <>\r\n      <NavBar variant=\"dark\" expand=\"sm\" bg=\"success\">\r\n        <Row className=\"w-100 justify-content-between align-items-center\">\r\n          <Col xs=\"auto\">\r\n            <NavBar.Toggle\r\n              collapsed=\"true\"\r\n              aria-controls=\"collapse-id\"\r\n              aria-expanded=\"false\"\r\n              aria-label=\"Toggle Navigation\"\r\n              onClick={() => setSidebarShow(!sidebarShow)}\r\n            />\r\n\r\n          </Col>\r\n          <Col xs=\"auto\">\r\n            <NavBar.Brand as={NavLink} to=\"/all\" exact>\r\n              <Check2All />\r\n          ToDo Manager\r\n        </NavBar.Brand>\r\n          </Col>\r\n          <Form className=\"my-2 my-lg-0 mx-auto d-none d-sm-block\">\r\n            <FormControl placeholder=\"Search\" aria-label=\"Search\" type=\"search\" />\r\n          </Form>\r\n          <Col xs=\"auto\"  style={{ display: 'flex', justifyContent: 'flex-end' }}>\r\n            <PersonCircle color=\"white\" size={30} />\r\n          </Col>\r\n        </Row>\r\n        <Row className=\"d-sm-none d-flex w-100 justify-content-between\">\r\n            <NavBar.Collapse>\r\n              <MyFilterChoice show={sidebarShow}>\r\n              </MyFilterChoice>\r\n            </NavBar.Collapse>\r\n        </Row>\r\n      </NavBar>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default MyNavbar;\r\n","import { PersonSquare, PencilFill, TrashFill, CheckSquare, Backspace } from 'react-bootstrap-icons';\r\nimport Button from 'react-bootstrap/Button';\r\nimport ListGroup from 'react-bootstrap/ListGroup';\r\nimport Form from 'react-bootstrap/Form';\r\nimport dayjs from 'dayjs';\r\nimport { useState } from 'react';\r\nimport { Col } from 'react-bootstrap';\r\nimport { Link, Switch, Route, useLocation, useHistory } from 'react-router-dom';\r\n\r\n\r\nfunction MyTaskItem(props) {\r\n    const [description, setDescription] = useState(props.task.description);\r\n    const [date, setDate] = useState(props.task.date);\r\n    const [important, setImportant] = useState(props.task.important);\r\n    const [isPrivate, setIsPrivate] = useState(props.task.private);\r\n    const [errorMessageDescription, setErrorMessageDescription] = useState(\"\");\r\n    const [errorMessageDate, setErrorMessageDate] = useState(\"\");\r\n\r\n    const location = useLocation();\r\n    const history = useHistory();\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        let valid = true;\r\n\r\n        setErrorMessageDate(() => \"\");\r\n        if ((date.isBefore(dayjs(), \"day\") && date !== props.task.date) || !date.isValid()) {\r\n            valid = false;\r\n            setErrorMessageDate((e) => {\r\n                if (e === \"\") {\r\n                    return (\"Invalid date (should be after \" + dayjs().format(\"DD/MM/YYYY\") + \")\")\r\n                }\r\n            })\r\n        }\r\n\r\n        if (description === \"\") {\r\n            valid = false;\r\n            setErrorMessageDescription((e) => {\r\n              return \"Invalid description (should have a description)\"\r\n            })\r\n          } else {\r\n            if (props.tasks.some((t) => t.description === description && t.date.format(\"DD/MM/YYYY\") === date.format(\"DD/MM/YYYY\") && t.id !== props.task.id)) {\r\n              valid = false;\r\n              setErrorMessageDescription((e) => {\r\n                  return (\"Invalid description (should not have the same description and date as other tasks)\")\r\n                }\r\n              )\r\n              setErrorMessageDate((e) => {\r\n                  return (\"Invalid date (should not have the same description and date as other tasks)\")\r\n                }\r\n              )\r\n            }\r\n          }\r\n\r\n       \r\n        \r\n        if (valid) {\r\n            const task = {\r\n                id: props.task.id, description: description, date: date, important: important, private: isPrivate\r\n            };\r\n\r\n            props.setTasks((oldTasks) => {\r\n                return oldTasks.map(ot => {\r\n                    if (ot.id === task.id)\r\n                        return task;\r\n                    else\r\n                        return ot;\r\n                });\r\n            });\r\n\r\n            setErrorMessageDescription(() => \"\");\r\n            setErrorMessageDate(() => \"\");\r\n            history.push(location.pathname.substr(0, location.pathname.lastIndexOf(\"/\")));\r\n        }\r\n    };\r\n\r\n\r\n    return (\r\n        <Switch>\r\n            <Route path={location.pathname.substring(0, location.pathname.lastIndexOf('/')) + \"/\" + props.task.id} render={() => {\r\n                return (\r\n                    <ListGroup.Item as=\"ul\" >\r\n                        <Form >\r\n                            <Form.Row className=\" align-items-center\" >\r\n                                <Form.Group as={Col} className=\"my-auto\" sm={4}>\r\n                                    <Form.Control required isInvalid={errorMessageDescription} value={description} onChange={ev => setDescription(() => ev.target.value)} />\r\n                                    <Form.Control.Feedback type=\"invalid\">{errorMessageDescription}</Form.Control.Feedback>\r\n                                </Form.Group>\r\n                                <Form.Group as={Col} className=\"my-auto\" sm={2}>\r\n                                    <Form.Check type=\"checkbox\" custom id=\"important\" label=\"Important\" defaultChecked={important} onChange={ev => setImportant(() => !important)} />\r\n                                </Form.Group>\r\n                                <Form.Group as={Col} className=\"my-auto\" sm={2}>\r\n                                    <Form.Check type=\"checkbox\" custom id=\"private\" label=\"Private\" defaultChecked={isPrivate} onChange={ev => setIsPrivate(() => !isPrivate)} />\r\n                                </Form.Group>\r\n                                <Form.Group as={Col} className=\"my-auto\" sm={3}>\r\n                                    <Form.Control type='date' isInvalid={errorMessageDate} min={dayjs().format('YYYY-MM-DD')} value={date.format('YYYY-MM-DD')} onChange={ev => setDate(() => dayjs(ev.target.value))} />\r\n                                    <Form.Control.Feedback type=\"invalid\">{errorMessageDate}</Form.Control.Feedback>\r\n                                </Form.Group>\r\n                                <Col style={{ display: 'flex', justifyContent: 'flex-end' }}>\r\n                                    <Button variant=\"danger\" style={{\r\n                                        background: \"red\",\r\n                                        color: \"white\",\r\n                                        padding: \"3px \",\r\n                                        height: \"24px\"\r\n                                    }} onClick={(event)=>{event.preventDefault(); history.push(location.pathname.substr(0, location.pathname.lastIndexOf(\"/\"))); }}>\r\n                                        <div className=\"d-flex w-100 justify-content-between align-items-center\" style={{\r\n                                            height: \"16px\", width: \"16px\"\r\n                                        }}>\r\n                                            <Backspace style={{\r\n                                                height: \"16px\", width: \"16px\", padding: \"0px\"\r\n                                            }} />\r\n                                        </div>\r\n                                    </Button>\r\n                                    <span className=\"mx-1\"></span>\r\n                                    <Button variant=\"success\" style={{\r\n                                        background: \"green\",\r\n                                        color: \"white\",\r\n                                        padding: \"3px\",\r\n                                        height: \"24px\"\r\n                                    }} onClick={handleSubmit}>\r\n                                        <div className=\"d-flex w-100 justify-content-between align-items-center\" style={{\r\n                                            height: \"16px\", width: \"16px\"\r\n                                        }}>\r\n                                            <CheckSquare style={{\r\n                                                height: \"16px\", width: \"16px\", padding: \"0px\"\r\n                                            }} />\r\n                                        </div>\r\n                                    </Button>\r\n                                </Col>\r\n                            </Form.Row>\r\n                        </Form>\r\n                    </ListGroup.Item >\r\n                )\r\n            }} />\r\n\r\n            <Route render={() => {\r\n                return (\r\n                    <ListGroup.Item as=\"ul\">\r\n                        <div className=\"d-flex w-100 justify-content-between align-items-center\" >\r\n                            <Col sm={6}>\r\n                                <Form.Check\r\n                                    type=\"checkbox\"\r\n                                    label={props.task.description}\r\n                                    id={props.task.id}\r\n                                    className={props.task.important ? \"important\" : \"\"}\r\n                                    custom\r\n                                />\r\n                            </Col>\r\n                            <Col>\r\n                                {props.task.private ? <PersonSquare /> : <></>}\r\n                            </Col>\r\n                            <div>\r\n                                <small>{props.task.date.format(\"DD MMM YYYY\")}       </small>\r\n                                <Button as={Link} to={ !isNaN(location.pathname.substr(location.pathname.lastIndexOf(\"/\")+1)) ? location.pathname.substr(0, location.pathname.lastIndexOf(\"/\")) + \"/\" + props.task.id : location.pathname + \"/\" + props.task.id} id=\"modifyButton\" style={{\r\n                                    padding: \"3px\",\r\n                                    height: \"24px\"\r\n                                }}>\r\n                                    <div className=\"d-flex w-100 justify-content-between align-items-center\" style={{\r\n                                        height: \"16px\", width: \"16px\"\r\n                                    }}>\r\n                                        <PencilFill style={{\r\n                                            height: \"16px\", width: \"16px\", padding: \"0px\"\r\n                                        }} />\r\n                                    </div>\r\n                                </Button>\r\n                                <Button id=\"deleteButton\" style={{\r\n                                    padding: \"3px\",\r\n                                    height: \"24px\"\r\n                                }} onClick={(event) => { event.preventDefault(); props.deleteTask(props.task.id) }}>\r\n                                    <div className=\"d-flex w-100 justify-content-between align-items-center\" style={{\r\n                                        height: \"16px\", width: \"16px\"\r\n                                    }}>\r\n                                        <TrashFill style={{\r\n                                            height: \"16px\", width: \"16px\", padding: \"0px\"\r\n                                        }} />\r\n                                    </div>\r\n                                </Button>\r\n                            </div>\r\n                        </div>\r\n                    </ListGroup.Item>\r\n                )\r\n            }} />\r\n\r\n\r\n        </Switch>\r\n    );\r\n}\r\n\r\n\r\n\r\nexport default MyTaskItem;","import ListGroup from 'react-bootstrap/ListGroup';\r\nimport React from 'react';\r\nimport MyTaskItem from './MyTaskItem';\r\nimport { useLocation } from 'react-router';\r\n\r\n\r\nfunction MyTaskList(props) {\r\n  const location = useLocation();\r\n\r\n  const deleteTask = (tId) => {\r\n    props.setTasks((oldTasks) => oldTasks.filter(t => t.id !== tId));\r\n  }\r\n\r\n  const filterAndMap = (t) => {\r\n    if (props.filter(t)) {\r\n      return (\r\n        <MyTaskItem key={t.id}\r\n          task={t}\r\n          deleteTask={deleteTask}\r\n          tasks={props.tasks}\r\n          setTasks={props.setTasks}\r\n        />\r\n      )\r\n    }\r\n    else {\r\n      return \"\";\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <h2><b>Filter: </b>{location.pathname.substr(location.pathname.indexOf(\"/\")+1).split(\"/\")[0]}</h2>\r\n      <ListGroup as=\"ul\" variant=\"flush\">{\r\n        props.tasks.map(filterAndMap)\r\n      }\r\n      </ListGroup>\r\n    </>);\r\n}\r\n\r\nexport default MyTaskList;","import MyFilterChoice from \"./MyFilterChoice\";\r\nimport MyTaskList from \"./MyTaskList\"\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Button from 'react-bootstrap/Button'\r\nimport { Plus } from 'react-bootstrap-icons';\r\nimport dayjs from 'dayjs';\r\nimport { useState, useEffect } from 'react';\r\nimport React from 'react';\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport Form from \"react-bootstrap/Form\"\r\nimport { CheckSquare } from 'react-bootstrap-icons';\r\nimport { Switch, Route } from 'react-router-dom';\r\n\r\n\r\nfunction MyContainer(props) {\r\n\r\n  const [tasks, setTasks] = useState();\r\n  const [modalShow, setModalShow] = useState(false);\r\n  const [waiting, setWaiting] = useState(true);\r\n\r\n  useEffect(() => {\r\n    async function fetchTasks() {\r\n      const response = await fetch('/api/tasks/');\r\n      const fetchedTasks = await response.json();\r\n      fetchedTasks.forEach(e => {\r\n        e.date = dayjs(e.date);\r\n      });\r\n      setTasks(fetchedTasks);\r\n      console.log(fetchedTasks);\r\n      setWaiting(false);\r\n    }\r\n    setWaiting(true);\r\n    fetchTasks();\r\n  }, [modalShow]);\r\n\r\n\r\n  return (\r\n    <Container fluid>\r\n      <Row className=\"min-height-94\">\r\n        <Col className=\"bg-light pt-3 d-none d-sm-block\" sm={4}>\r\n          <MyFilterChoice></MyFilterChoice>\r\n        </Col>\r\n        {!waiting && <Col className=\"pt-3\" sm={8}>\r\n\r\n          <Switch>\r\n            <Route path=\"/important\" render={() => {\r\n              return (\r\n                <MyTaskList tasks={tasks} setTasks={setTasks} filter={(t) => t.important} />\r\n              );\r\n            }} />\r\n\r\n            <Route path=\"/today\" render={() => {\r\n              return (\r\n                <MyTaskList tasks={tasks} setTasks={setTasks} filter={(t) => (t.date.isSame(dayjs(), 'day'))} />\r\n              );\r\n            }} />\r\n\r\n            <Route path=\"/next7days\" render={() => {\r\n              return (\r\n                <MyTaskList tasks={tasks} setTasks={setTasks} filter={(t) =>\r\n                  (t.date.isAfter(dayjs(), 'day') && t.date.isBefore(dayjs().add(7, 'day'), 'day'))} />\r\n              );\r\n            }} />\r\n\r\n            <Route path=\"/private\" render={() => {\r\n              return (\r\n                <MyTaskList tasks={tasks} setTasks={setTasks} filter={(t) => t.private} />\r\n              );\r\n            }} />\r\n\r\n            <Route path=\"/all\" render={() => {\r\n              return (\r\n                <MyTaskList tasks={tasks} setTasks={setTasks} filter={(t) => true} />\r\n              );\r\n            }} />\r\n\r\n          </Switch>\r\n        </Col>}\r\n      </Row>\r\n      <Button variant=\"success\" id=\"AddTask\" onClick={() => setModalShow(true)}>\r\n        <Plus width=\"40\" height=\"50\" />\r\n      </Button>\r\n      {!waiting && <MyModalForm\r\n        tasks={tasks}\r\n        setTasks={setTasks}\r\n        show={modalShow}\r\n        onHide={() => setModalShow(false)}\r\n      />}\r\n    </Container>\r\n  )\r\n}\r\n\r\nfunction MyModalForm(props) {\r\n  const [description, setDescription] = useState(\"\");\r\n  const [date, setDate] = useState(dayjs());\r\n  const [important, setImportant] = useState(false);\r\n  const [isPrivate, setIsPrivate] = useState(false);\r\n  const [errorMessageDescription, setErrorMessageDescription] = useState(\"\");\r\n  const [errorMessageDate, setErrorMessageDate] = useState(\"\");\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    let valid = true;\r\n\r\n    setErrorMessageDate(() => \"\");\r\n    if (date.isBefore(dayjs().format(\"YYYY-MM-DD\")) || !date.isValid()) {\r\n      valid = false;\r\n      setErrorMessageDate((e) => {\r\n        if (e === \"\") {\r\n          return (\"Invalid date (should be after \" + dayjs().format(\"DD/MM/YYYY\") + \")\")\r\n        }\r\n      })\r\n    }\r\n    if (description === \"\") {\r\n      valid = false;\r\n      setErrorMessageDescription((e) => {\r\n        return \"Invalid description (should have a description)\"\r\n      })\r\n    } else {\r\n      if (props.tasks.some((t) => t.description === description && t.date.format(\"DD/MM/YYYY\") === date.format(\"DD/MM/YYYY\"))) {\r\n        valid = false;\r\n        setErrorMessageDescription((e) => {\r\n          return (\"Invalid description (should not have the same description and date as other tasks)\")\r\n        }\r\n        )\r\n        setErrorMessageDate((e) => {\r\n          return (\"Invalid date (should not have the same description and date as other tasks)\")\r\n        }\r\n        )\r\n      }\r\n    }\r\n\r\n\r\n    if (valid) {\r\n      const task = {\r\n        description: description, date: date, important: important, private: isPrivate, completed: 0, user: 0\r\n      };\r\n\r\n      //props.setTasks((oldTasks) => [...oldTasks, task]);\r\n\r\n      fetch(\"/api/tasks/\",\r\n        {\r\n          method: \"POST\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify(task),\r\n        })\r\n        .catch(function(error){\r\n          console.log(\"Failed to store data on server: \", error);\r\n        })\r\n\r\n      resetForm();\r\n      props.onHide();\r\n    }\r\n\r\n  };\r\n\r\n  function resetForm() {\r\n    setErrorMessageDescription(() => \"\");\r\n    setErrorMessageDate(() => \"\");\r\n    setDate(() => dayjs());\r\n    setDescription(() => '');\r\n    setIsPrivate(() => false);\r\n    setImportant(() => false);\r\n  }\r\n\r\n  return (\r\n    <Modal\r\n      show={props.show}\r\n      onHide={() => { resetForm(); props.onHide() }}\r\n      size=\"lg\"\r\n      aria-labelledby=\"modalForm\"\r\n      centered\r\n    >\r\n      <Modal.Header closeButton>\r\n        <Modal.Title id=\"modalForm\">\r\n          <h2>New Task</h2>\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <Form >\r\n          <Form.Row className=\" align-items-center\" >\r\n            <Form.Group as={Col} className=\"my-auto\" >\r\n              <Form.Label>Description</Form.Label>\r\n              <Form.Control required placeholder=\"Description\" isInvalid={errorMessageDescription} value={description} onChange={ev => setDescription(() => ev.target.value)} />\r\n              <Form.Control.Feedback type=\"invalid\">{errorMessageDescription}</Form.Control.Feedback>\r\n            </Form.Group>\r\n          </Form.Row>\r\n          <Form.Row className=\"mt-2\">\r\n            <Form.Group as={Col} className=\"my-auto\" sm=\"auto\">\r\n              <Form.Label>Date</Form.Label>\r\n              <Form.Control type='date' isInvalid={errorMessageDate} min={dayjs().format('YYYY-MM-DD')} value={date.format('YYYY-MM-DD')} onChange={ev => setDate(() => dayjs(ev.target.value))} />\r\n              <Form.Control.Feedback type=\"invalid\">{errorMessageDate}</Form.Control.Feedback>\r\n            </Form.Group>\r\n            <Col></Col>\r\n            <Form.Group as={Col} className=\"my-auto\" >\r\n              <Form.Check type=\"checkbox\" custom id=\"important\" label=\"Important\" onChange={ev => setImportant(() => !important)} />\r\n            </Form.Group>\r\n            <Form.Group as={Col} className=\"my-auto\" >\r\n              <Form.Check type=\"checkbox\" custom id=\"private\" label=\"Private\" onChange={ev => setIsPrivate(() => !isPrivate)} />\r\n            </Form.Group>\r\n            <Col sm=\"auto\" className=\"d-flex align-items-center\" >\r\n              <Button variant=\"success\" style={{\r\n                background: \"green\",\r\n                color: \"white\",\r\n                padding: \"6px\",\r\n                height: \"48px\"\r\n              }} onClick={handleSubmit}>\r\n                <div className=\"d-flex w-100 justify-content-between align-items-center\" style={{\r\n                  height: \"32px\", width: \"32px\"\r\n                }}>\r\n                  <CheckSquare style={{\r\n                    height: \"32px\", width: \"32\", padding: \"0px\"\r\n                  }} />\r\n                </div>\r\n              </Button>\r\n            </Col>\r\n          </Form.Row>\r\n        </Form>\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <Button\r\n          variant=\"danger\"\r\n          onClick={() => {\r\n            resetForm();\r\n            props.onHide();\r\n          }\r\n          }>\r\n          Close\r\n        </Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default MyContainer;","import \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./App.css\";\r\nimport MyNavbar from \"./components/MyNavbar\";\r\nimport React from 'react';\r\nimport MyContainer from \"./components/MyContainer\";\r\nimport {BrowserRouter as Router, Redirect, Route} from 'react-router-dom';\r\n\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <Route path={\"/\"} exact><Redirect to=\"/all\"/></Route>\r\n      <MyNavbar />\r\n      <MyContainer />\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}